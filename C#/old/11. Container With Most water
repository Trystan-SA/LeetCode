using System.Runtime.CompilerServices;
using System.Text;


/*
static string Convert(string s, int numRows) {
    if(numRows == 1) return s;

    List<StringBuilder> rows = new List<StringBuilder>(Math.Min(numRows, s.Length));
    for (int i = 0; i < Math.Min(numRows, s.Length); i++){
        rows.Add(new StringBuilder());
    }

    int direction = -1;
    int currentRow = 0;

    foreach (char c in s){
        rows[currentRow].Append(c);
        currentRow += (direction == -1) ? 1 : -1;

        if(currentRow == 0 || currentRow == numRows -1){
            direction = -direction;
        }
    }

    StringBuilder result = new StringBuilder();
    foreach (StringBuilder row in rows){
        result.Append(row);
    }

    return result.ToString();
}
*/


static int MaxArea(int[] height) {
    int largestVolume = 0;
    int l = 0;
    int r = height.Length-1;
    
    while(l<r){
        int volumeFound = Math.Abs(Math.Min(height[l], height[r]) * (r-l));
        largestVolume = volumeFound > largestVolume ? volumeFound : largestVolume;

        if( height[l] < height[r] ){ l++; }
        else { r--; }
    }
   
    return largestVolume;
}


var result = MaxArea([1,8,6,2,5,4,8,3,7]);
Console.WriteLine("result = " + result);


